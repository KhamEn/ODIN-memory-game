{"version":3,"sources":["components/Scoreboard.js","components/Cards.js","images/Bach.jpg","images/Beethoven.jpg","images/Brahms.jpg","images/Bruckner.jpg","images/Chopin.jpg","images/Dvorak.jpg","images/Glass.jpg","images/Haydn.jpg","images/Mendelssohn.jpg","images/Mozart.jpg","images/Rachmaninoff.jpg","images/Schubert.jpg","components/Banner.js","App.js","index.js"],"names":["Scoreboard","props","className","currentScore","bestScore","Cards","onCardSelect","e","target","alt","cards","map","card","src","image","name","onClick","Banner","shuffle","i","length","random","Math","floor","current","App","composersCards","Bach","Beethoven","Brahms","Bruckner","Chopin","Dvorak","Glass","Haydn","Mendelssohn","Mozart","Rachmaninoff","Schubert","useState","setCurrentScore","setBestScore","setCards","Set","selectedCards","setSelectedCards","cardName","has","prevCards","add","prevScore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAkBeA,MAhBf,SAAoBC,GAClB,OACE,sBAAKC,UAAU,UAAf,UACE,uBAAMA,UAAU,aAAhB,UACE,qBAAKA,UAAU,0BAAf,qBACA,qBAAKA,UAAU,0BAAf,SAA0CD,EAAME,kBAElD,sBAAMD,UAAU,oBAChB,uBAAMA,UAAU,aAAhB,UACE,qBAAKA,UAAU,uBAAf,kBACA,qBAAKA,UAAU,uBAAf,SAAuCD,EAAMG,mB,MCYtCC,MAtBf,SAAeJ,GACb,SAASK,EAAaC,GACpBN,EAAMK,aAAaC,EAAEC,OAAOC,KAiB9B,OAAO,qBAAKP,UAAU,iBAAf,SAbED,EAAMS,MAAMC,KAAI,SAACC,GAAD,OACrB,sBAAKV,UAAU,sBAAf,UACE,qBACEW,IAAKD,EAAKE,MACVL,IAAKG,EAAKG,KACVb,UAAU,eACVc,QAASV,IAEX,qBAAKJ,UAAU,oBAAf,SAAoCU,EAAKG,gBChBlC,MAA0B,iCCA1B,MAA0B,sCCA1B,MAA0B,mCCA1B,MAA0B,qCCA1B,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,wCCA1B,MAA0B,mCCA1B,MAA0B,yCCA1B,MAA0B,qC,MCiB1BE,MAdf,SAAgBhB,GACd,OACE,sBAAKC,UAAU,SAAf,UACE,qBAAKA,UAAU,eAAf,yBACA,sBAAMA,UAAU,kBAAhB,SACE,cAAC,EAAD,CACEC,aAAcF,EAAME,aACpBC,UAAWH,EAAMG,kBCS3B,SAASc,EAAQR,GACf,IAAK,IAAIS,EAAIT,EAAMU,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAASC,KAAKC,MAAMD,KAAKD,UAAYF,EAAI,IACzCK,EAAUd,EAAMS,GACpBT,EAAMS,GAAKT,EAAMW,GACjBX,EAAMW,GAAUG,EAElB,OAAOd,EA+CMe,MA5Cf,WACE,IAAMC,EAAiB,CACrB,CAAEX,KAAM,OAAQD,MAAOa,GACvB,CAAEZ,KAAM,YAAaD,MAAOc,GAC5B,CAAEb,KAAM,SAAUD,MAAOe,GACzB,CAAEd,KAAM,WAAYD,MAAOgB,GAC3B,CAAEf,KAAM,SAAUD,MAAOiB,GACzB,CAAEhB,KAAM,SAAUD,MAAOkB,GACzB,CAAEjB,KAAM,QAASD,MAAOmB,GACxB,CAAElB,KAAM,QAASD,MAAOoB,GACxB,CAAEnB,KAAM,cAAeD,MAAOqB,GAC9B,CAAEpB,KAAM,SAAUD,MAAOsB,GACzB,CAAErB,KAAM,eAAgBD,MAAOuB,GAC/B,CAAEtB,KAAM,WAAYD,MAAOwB,IAE7B,EAAsCC,mBAAS,GAA/C,mBAAKpC,EAAL,KAAmBqC,EAAnB,KACA,EAAgCD,mBAAS,GAAzC,mBAAKnC,EAAL,KAAgBqC,EAAhB,KACA,EAAwBF,mBAASrB,EAAQQ,IAAzC,mBAAKhB,EAAL,KAAYgC,EAAZ,KACA,EAAwCH,mBAAS,IAAII,KAArD,mBAAKC,EAAL,KAAoBC,EAApB,KAiBA,OACE,gCACE,cAAC,EAAD,CAAQ1C,aAAcA,EAAcC,UAAWA,IAE/C,cAAC,EAAD,CAAOM,MAAOA,EAAOJ,aAnBzB,SAAsBwC,GAChBF,EAAcG,IAAID,IAChB3C,EAAeC,GACjBqC,EAAatC,GAEfqC,EAAgB,GAChBK,EAAiB,IAAIF,OAErBE,GAAiB,SAACG,GAAD,OAAe,IAAIL,IAAIK,EAAUC,IAAIH,OACtDN,GAAgB,SAACU,GAAD,OAAeA,EAAY,MAG7CR,EAASxB,EAAQQ,WCzDrByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.270e584f.chunk.js","sourcesContent":["import \"./scoreboard.css\";\n\nfunction Scoreboard(props) {\n  return (\n    <div className=\"Divided\">\n      <span className=\"Scoreboard\">\n        <div className=\"Scoreboard-titleCurrent\">Current</div>\n        <div className=\"Scoreboard-currentScore\">{props.currentScore}</div>\n      </span>\n      <span className=\"Divided-divider\"></span>\n      <span className=\"Scoreboard\">\n        <div className=\"Scoreboard-titleBest\">Best</div>\n        <div className=\"Scoreboard-bestScore\">{props.bestScore}</div>\n      </span>\n    </div>\n  );\n}\n\nexport default Scoreboard;\n","import \"./cards.css\";\r\n\r\nfunction Cards(props) {\r\n  function onCardSelect(e) {\r\n    props.onCardSelect(e.target.alt);\r\n  }\r\n\r\n  function getCardsAsElements() {\r\n    return props.cards.map((card) => (\r\n      <div className=\"Card Card--hovering\">\r\n        <img\r\n          src={card.image}\r\n          alt={card.name}\r\n          className=\"Card-picture\"\r\n          onClick={onCardSelect}\r\n        />\r\n        <div className=\"Card-composerName\">{card.name}</div>\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  return <div className=\"grid-container\">{getCardsAsElements()}</div>;\r\n}\r\n\r\nexport default Cards;\r\n","export default __webpack_public_path__ + \"static/media/Bach.da65ab26.jpg\";","export default __webpack_public_path__ + \"static/media/Beethoven.a25b555a.jpg\";","export default __webpack_public_path__ + \"static/media/Brahms.a6d8e80b.jpg\";","export default __webpack_public_path__ + \"static/media/Bruckner.dfd9501a.jpg\";","export default __webpack_public_path__ + \"static/media/Chopin.4cb2b1dd.jpg\";","export default __webpack_public_path__ + \"static/media/Dvorak.36756c58.jpg\";","export default __webpack_public_path__ + \"static/media/Glass.cb51d44d.jpg\";","export default __webpack_public_path__ + \"static/media/Haydn.c485f8b1.jpg\";","export default __webpack_public_path__ + \"static/media/Mendelssohn.54d1fd06.jpg\";","export default __webpack_public_path__ + \"static/media/Mozart.d4e4d1dc.jpg\";","export default __webpack_public_path__ + \"static/media/Rachmaninoff.0a69e0ea.jpg\";","export default __webpack_public_path__ + \"static/media/Schubert.5bcdf48b.jpg\";","import \"./banner.css\";\nimport Scoreboard from \"./Scoreboard\";\n\nfunction Banner(props) {\n  return (\n    <div className=\"Banner\">\n      <div className=\"Banner-title\">Memory Game</div>\n      <span className=\"Banner-logoLine\">\n        <Scoreboard\n          currentScore={props.currentScore}\n          bestScore={props.bestScore}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default Banner;\n","import { useState } from \"react\";\r\nimport Scoreboard from \"./components/Scoreboard\";\r\nimport Cards from \"./components/Cards\";\r\nimport {\r\n  Bach,\r\n  Beethoven,\r\n  Brahms,\r\n  Bruckner,\r\n  Chopin,\r\n  Dvorak,\r\n  Glass,\r\n  Haydn,\r\n  Mendelssohn,\r\n  Mozart,\r\n  Rachmaninoff,\r\n  Schubert,\r\n} from \"./components/ComposerImages\";\r\nimport Banner from \"./components/Banner\";\r\n\r\nfunction shuffle(cards) {\r\n  for (let i = cards.length - 1; i > 0; i--) {\r\n    let random = Math.floor(Math.random() * (i + 1));\r\n    let current = cards[i];\r\n    cards[i] = cards[random];\r\n    cards[random] = current;\r\n  }\r\n  return cards;\r\n}\r\n\r\nfunction App() {\r\n  const composersCards = [\r\n    { name: \"Bach\", image: Bach },\r\n    { name: \"Beethoven\", image: Beethoven },\r\n    { name: \"Brahms\", image: Brahms },\r\n    { name: \"Bruckner\", image: Bruckner },\r\n    { name: \"Chopin\", image: Chopin },\r\n    { name: \"Dvorak\", image: Dvorak },\r\n    { name: \"Glass\", image: Glass },\r\n    { name: \"Haydn\", image: Haydn },\r\n    { name: \"Mendelssohn\", image: Mendelssohn },\r\n    { name: \"Mozart\", image: Mozart },\r\n    { name: \"Rachmaninoff\", image: Rachmaninoff },\r\n    { name: \"Schubert\", image: Schubert },\r\n  ];\r\n  let [currentScore, setCurrentScore] = useState(0);\r\n  let [bestScore, setBestScore] = useState(0);\r\n  let [cards, setCards] = useState(shuffle(composersCards));\r\n  let [selectedCards, setSelectedCards] = useState(new Set());\r\n\r\n  function onCardSelect(cardName) {\r\n    if (selectedCards.has(cardName)) {\r\n      if (currentScore > bestScore) {\r\n        setBestScore(currentScore);\r\n      }\r\n      setCurrentScore(0);\r\n      setSelectedCards(new Set());\r\n    } else {\r\n      setSelectedCards((prevCards) => new Set(prevCards.add(cardName)));\r\n      setCurrentScore((prevScore) => prevScore + 1);\r\n    }\r\n\r\n    setCards(shuffle(composersCards));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Banner currentScore={currentScore} bestScore={bestScore} />\r\n      {/*<Scoreboard currentScore={currentScore} bestScore={bestScore} />*/}\r\n      <Cards cards={cards} onCardSelect={onCardSelect} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}